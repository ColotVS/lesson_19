public class lesson_19_18 {
    //Ссылка на метод

    //Однако наш код с лямбда-выражением можно записать еще короче.


    //Во-первых, можно опустить скобки вокруг параметра s:

    //list.forEach( (s) -> System.out.println(s) );
    //Было

    //list.forEach( s -> System.out.println(s) );
    //Стало

    //Так можно делать только если параметр один. Если параметров несколько, нужно использовать скобки.


    //Ну а во-вторых, можно записать так:

    //list.forEach( System.out::println );
    //Самая компактная запись

    //Это все одна и та же запись. Обратите внимание, что после println нет скобок.

    //Тут записан один и тот же код — вызов метода:
    //объект::метод             x -> объект.метод(x)

    //Подумайте сами: мы хотели для каждого элемента коллекции list выполнять какое-то действие.
    //Если это действие — вызов одной функции (такой как println()),
    //было бы разумно просто передать функцию в метод в качестве параметра.

    //А как объяснить компилятору, что функцию нужно именно передать, а не вызвать?
    //Для этого перед именем метода ставим не точку, а два двоеточия: одно двоеточие уже занято в тернарном операторе.

    //Это и есть самая простая и компактная запись.
}
