public class lesson_19_45 {
    //Коллекторы в Java

    //И наконец-то мы дошли до самого интересного метода в классе Stream — метода collect().
    //Он используется для того, чтобы перейти от потоков к привычным коллекциям — List<T>, Set<T>, Map<T, R> и другим.

    //В метод collect() нужно передать специальный объект — collector. Этот объект вычитывает все данные из потока,
    //преобразует их к определенной коллекции и возвращает ее. А следом за ним эту же коллекцию возвращает и сам метод collect.

    //Все это сделано довольно хитро: объект collector имеет тип Collector<T, A, R> – у него аж три типа-параметра.
    //Последний тип R — это обычно и есть тип вроде List<T>.
    //Поэтому компилятор может по этому типу подставить правильный тип результата самого метода collect().

    //Надеюсь, вы не сильно запутались. В любом случае, самому создавать объекты типа Collector вам не нужно.
    //Достаточно просто воспользоваться уже готовыми объектами, которые возвращают статические методы класса Collectors.


    //Класс Collectors

    //У класса Collectors есть несколько статических методов, которые возвращают готовые объекты-коллекторы на все случаи жизни.
    //Их несколько десятков, но мы рассмотрим самые основные:
    //toList()      Объект, который преобразует поток в список — List<T>
    //toSet()       Объект, который преобразует поток во множество — Set<T>
    //toMap()       Объект, который преобразует поток в мэп — Map<K, V>
    //joining()     Склеивает элементы потока в одну строку
    //mapping()     Преобразует элементы потока в Map<K, V>
    //groupingBy()  Группирует элементы, возвращает Map <K, V>
}
